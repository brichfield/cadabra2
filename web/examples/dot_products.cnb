% Cadabra notebook version 1.2
\documentclass[11pt]{article}
\usepackage[textwidth=460pt, textheight=660pt]{geometry}
\usepackage[usenames,dvipsnames]{color}
\usepackage{amssymb}
\usepackage[parfill]{parskip}
\usepackage{breqn}
\usepackage{tableaux}
\def\specialcolon{\mathrel{\mathop{:}}\hspace{-.5em}}
\renewcommand{\bar}[1]{\overline{#1}}
\begin{document}
{\color[named]{Blue}\begin{verbatim}
{\mu,\nu,\rho}::Indices(vector).
\end{verbatim}}
\begin{verbatim}
Assigning list property Indices to \mu, \nu, \rho.
\end{verbatim}
% Begin TeX cell closed
In many applications one encounters inner products of vectors, such as in the expression below:
% End TeX cell
{\color[named]{Blue}\begin{verbatim}
A^{\mu} \epsilon_{\mu} \epsilon_{\nu} B^{\nu};
\end{verbatim}}
% orig
% A^{\mu} \epsilon_{\mu} \epsilon_{\nu} B^{\nu};

% end_orig
\begin{dmath*}[compact, spread=2pt]
1\specialcolon{}= A^{\mu} \epsilon_{\mu} \epsilon_{\nu} B^{\nu};
\end{dmath*}
% Begin TeX cell closed
It is often useful to write these using a more compact ``dot'' notation, eliminating the contracting indices. We can do this in Cadabra by making use of the ``\verb|\cdot|'' operator together with a standard substitution rule:
% End TeX cell
{\color[named]{Blue}\begin{verbatim}
@substitute!!(%)( B?_{\mu} A?^{\mu} -> \cdot(B?)(A?) );
\end{verbatim}}
% orig
% \epsilon.A \epsilon.B;

% end_orig
\begin{dmath*}[compact, spread=2pt]
1\specialcolon{}= \,\epsilon\!\cdot{}\!A\, \,\epsilon\!\cdot{}\!B\,;
\end{dmath*}
% Begin TeX cell closed
A similar substitution rule brings us back to the form with explicit indices:
% End TeX cell
{\color[named]{Blue}\begin{verbatim}
@substitute!!(%)( \cdot(A?)(B?) -> A?_{\mu} B?^{\mu} );
\end{verbatim}}
% orig
% \epsilon_{\mu} A^{\mu} \epsilon_{\nu} B^{\nu};

% end_orig
\begin{dmath*}[compact, spread=2pt]
1\specialcolon{}= \epsilon_{\mu} A^{\mu} \epsilon_{\nu} B^{\nu};
\end{dmath*}
\end{document}
